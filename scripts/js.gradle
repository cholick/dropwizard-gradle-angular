apply plugin: 'js'

def scripts = fileTree(
        dir: 'src/main/resources/assets/js/', include: '**/*.js'
)

jshint {
    tasks.jshint.source = scripts
    tasks.jshint.ignoreExitCode = false
    tasks.jshint.outputToStdOut = true
    jshint.options = [undef: true]
    jshint.predef = ['angular': true, 'console': true]
}

watch {
    assets {
        files files('src/main/resources')
        tasks 'setupSpec'
    }
    jsTest {
        files files('src/test/javaScript')
        tasks 'setupSpec'
    }
}

//combineJs {
//    source = scripts
//    dest = file("${buildDir}/jsTest/all.js")
//}

task copyJs(type: Copy) {
    from 'src/main/resources/assets/js'
    into "${buildDir}/jsTest/js"
}

task copyJsSpec(type: Copy) {
    from 'src/test/javaScript'
    into "${buildDir}/jsTest"
    exclude 'index.htm'
}

String specPath = 'src/test/javaScript/spec/'
String specTags = fileTree(specPath).collect {
    String path = it.path.split(specPath)[1]
    "<script type='text/javascript' src='/spec/${path}'></script>"
}.join('\n')

String sourcePath = 'src/main/resources/assets/js/'
String sourceTags = fileTree(dir: sourcePath, include: '**/*.js').collect {
    String path = it.path.split(sourcePath)[1]
    "<script type='text/javascript' src='/js/${path}'></script>"
}.join('\n')

import org.apache.tools.ant.filters.ReplaceTokens

task template(type: Copy) {
    from 'src/test/javaScript/index.htm'
    into "${buildDir}/jsTest"
    filter(ReplaceTokens, tokens: [specs: specTags, source: sourceTags])
}

task setupSpec(dependsOn: [copyJs, copyJsSpec, template]) << {}

apply plugin: 'jetty'
jettyRun {
    webAppSourceDirectory = file("${buildDir}/jsTest")
    contextPath = ''
    httpPort = 9010
    scanIntervalSeconds = 1
}
jettyRun.dependsOn = [watchThread, setupSpec]
